{
  "version": 3,
  "sources": ["../../node_modules/react-medium-image-zoom/dist/index.js"],
  "sourcesContent": ["import React, { Component, createRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nfunction ICompress() {\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-unzoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\n        React.createElement(\"path\", { d: \"M 14.144531 1.148438 L 9 6.292969 L 9 3 L 8 3 L 8 8 L 13 8 L 13 7 L 9.707031 7 L 14.855469 1.851563 Z M 8 8 L 3 8 L 3 9 L 6.292969 9 L 1.148438 14.144531 L 1.851563 14.855469 L 7 9.707031 L 7 13 L 8 13 Z\" })));\n}\nfunction IEnlarge() {\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-zoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\n        React.createElement(\"path\", { d: \"M 9 1 L 9 2 L 12.292969 2 L 2 12.292969 L 2 9 L 1 9 L 1 14 L 6 14 L 6 13 L 2.707031 13 L 13 2.707031 L 13 6 L 14 6 L 14 1 Z\" })));\n}\n\nconst testElType = (type, el) => type === el?.tagName?.toUpperCase?.();\nconst testDiv = (el) => testElType('DIV', el) || testElType('SPAN', el);\nconst testImg = (el) => testElType('IMG', el);\nconst testImgLoaded = (el) => el.complete && el.naturalHeight !== 0;\nconst testSvg = (el) => testElType('SVG', el);\nconst getScaleToWindow = ({ height, offset, width }) => {\n    return Math.min((window.innerWidth - offset * 2) / width, (window.innerHeight - offset * 2) / height);\n};\nconst getScaleToWindowMax = ({ containerHeight, containerWidth, offset, targetHeight, targetWidth, }) => {\n    const scale = getScaleToWindow({\n        height: targetHeight,\n        offset,\n        width: targetWidth,\n    });\n    const ratio = targetWidth > targetHeight\n        ? targetWidth / containerWidth\n        : targetHeight / containerHeight;\n    return scale > 1 ? ratio : scale * ratio;\n};\nconst getScale = ({ containerHeight, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    if (!containerHeight || !containerWidth) {\n        return 1;\n    }\n    return !hasScalableSrc && targetHeight && targetWidth\n        ? getScaleToWindowMax({\n            containerHeight,\n            containerWidth,\n            offset,\n            targetHeight,\n            targetWidth,\n        })\n        : getScaleToWindow({\n            height: containerHeight,\n            offset,\n            width: containerWidth,\n        });\n};\nconst URL_REGEX = /url(?:\\(['\"]?)(.*?)(?:['\"]?\\))/;\nconst getImgSrc = (imgEl) => {\n    if (imgEl) {\n        if (testImg(imgEl)) {\n            return imgEl.currentSrc;\n        }\n        else if (testDiv(imgEl)) {\n            const bgImg = window.getComputedStyle(imgEl).backgroundImage;\n            if (bgImg) {\n                return URL_REGEX.exec(bgImg)?.[1];\n            }\n        }\n    }\n};\nconst getImgAlt = (imgEl) => {\n    if (imgEl) {\n        if (testImg(imgEl)) {\n            return imgEl.alt ?? undefined;\n        }\n        else {\n            return imgEl.getAttribute('aria-label') ?? undefined;\n        }\n    }\n};\nconst getImgRegularStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    const scale = getScale({\n        containerHeight,\n        containerWidth,\n        hasScalableSrc,\n        offset,\n        targetHeight,\n        targetWidth,\n    });\n    return {\n        top: containerTop,\n        left: containerLeft,\n        width: containerWidth * scale,\n        height: containerHeight * scale,\n        transform: `translate(0,0) scale(${1 / scale})`,\n    };\n};\nconst parsePosition = ({ position, relativeNum }) => {\n    const positionNum = parseFloat(position);\n    return position.endsWith('%')\n        ? relativeNum * positionNum / 100\n        : positionNum;\n};\nconst getImgObjectFitStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, objectFit, objectPosition, offset, targetHeight, targetWidth, }) => {\n    if (objectFit === 'scale-down') {\n        if (targetWidth <= containerWidth && targetHeight <= containerHeight) {\n            objectFit = 'none';\n        }\n        else {\n            objectFit = 'contain';\n        }\n    }\n    if (objectFit === 'cover' || objectFit === 'contain') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = objectFit === 'cover'\n            ? Math.max(widthRatio, heightRatio)\n            : Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (objectFit === 'none') {\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\n        const scale = getScale({\n            containerHeight: targetHeight,\n            containerWidth: targetWidth,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * scale,\n            height: targetHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (objectFit === 'fill') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = Math.max(widthRatio, heightRatio);\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            width: containerWidth * scale,\n            height: containerHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else {\n        return {};\n    }\n};\nconst getDivImgStyle = ({ backgroundPosition, backgroundSize, containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    if (backgroundSize === 'cover' || backgroundSize === 'contain') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = backgroundSize === 'cover'\n            ? Math.max(widthRatio, heightRatio)\n            : Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (backgroundSize === 'auto') {\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\n        const scale = getScale({\n            containerHeight: targetHeight,\n            containerWidth: targetWidth,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * scale,\n            height: targetHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else {\n        const [sizeW = '50%', sizeH = '50%'] = backgroundSize.split(' ');\n        const sizeWidth = parsePosition({ position: sizeW, relativeNum: containerWidth });\n        const sizeHeight = parsePosition({ position: sizeH, relativeNum: containerHeight });\n        const widthRatio = sizeWidth / targetWidth;\n        const heightRatio = sizeHeight / targetHeight;\n        const ratio = Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n};\nconst SRC_SVG_REGEX = /\\.svg$/i;\nconst getStyleModalImg = ({ hasZoomImg, imgSrc, isSvg, isZoomed, loadedImgEl, offset, shouldRefresh, targetEl, }) => {\n    const hasScalableSrc = isSvg ||\n        imgSrc?.slice?.(0, 18) === 'data:image/svg+xml' ||\n        hasZoomImg ||\n        !!(imgSrc && SRC_SVG_REGEX.test(imgSrc));\n    const imgRect = targetEl.getBoundingClientRect();\n    const targetElComputedStyle = window.getComputedStyle(targetEl);\n    const isDivImg = loadedImgEl != null && testDiv(targetEl);\n    const isImgObjectFit = loadedImgEl != null && !isDivImg;\n    const styleImgRegular = getImgRegularStyle({\n        containerHeight: imgRect.height,\n        containerLeft: imgRect.left,\n        containerTop: imgRect.top,\n        containerWidth: imgRect.width,\n        hasScalableSrc,\n        offset,\n        targetHeight: loadedImgEl?.naturalHeight ?? imgRect.height,\n        targetWidth: loadedImgEl?.naturalWidth ?? imgRect.width,\n    });\n    const styleImgObjectFit = isImgObjectFit\n        ? getImgObjectFitStyle({\n            containerHeight: imgRect.height,\n            containerLeft: imgRect.left,\n            containerTop: imgRect.top,\n            containerWidth: imgRect.width,\n            hasScalableSrc,\n            objectFit: targetElComputedStyle.objectFit,\n            objectPosition: targetElComputedStyle.objectPosition,\n            offset,\n            targetHeight: loadedImgEl.naturalHeight,\n            targetWidth: loadedImgEl.naturalWidth,\n        })\n        : undefined;\n    const styleDivImg = isDivImg\n        ? getDivImgStyle({\n            backgroundPosition: targetElComputedStyle.backgroundPosition,\n            backgroundSize: targetElComputedStyle.backgroundSize,\n            containerHeight: imgRect.height,\n            containerLeft: imgRect.left,\n            containerTop: imgRect.top,\n            containerWidth: imgRect.width,\n            hasScalableSrc,\n            offset,\n            targetHeight: loadedImgEl.naturalHeight,\n            targetWidth: loadedImgEl.naturalWidth,\n        })\n        : undefined;\n    const style = Object.assign({}, styleImgRegular, styleImgObjectFit, styleDivImg);\n    if (isZoomed) {\n        const viewportX = window.innerWidth / 2;\n        const viewportY = window.innerHeight / 2;\n        const childCenterX = parseFloat(String(style.left || 0)) + (parseFloat(String(style.width || 0)) / 2);\n        const childCenterY = parseFloat(String(style.top || 0)) + (parseFloat(String(style.height || 0)) / 2);\n        const translateX = viewportX - childCenterX;\n        const translateY = viewportY - childCenterY;\n        if (shouldRefresh) {\n            style.transitionDuration = '0.01ms';\n        }\n        style.transform = `translate(${translateX}px,${translateY}px) scale(1)`;\n    }\n    return style;\n};\nconst getStyleGhost = (imgEl) => {\n    if (!imgEl) {\n        return {};\n    }\n    if (testSvg(imgEl)) {\n        const parentEl = imgEl.parentElement;\n        const rect = imgEl.getBoundingClientRect();\n        if (parentEl) {\n            const parentRect = parentEl.getBoundingClientRect();\n            return {\n                height: rect.height,\n                left: parentRect.left - rect.left,\n                top: parentRect.top - rect.top,\n                width: rect.width,\n            };\n        }\n        else {\n            return {\n                height: rect.height,\n                left: rect.left,\n                width: rect.width,\n                top: rect.top,\n            };\n        }\n    }\n    else {\n        return {\n            height: imgEl.offsetHeight,\n            left: imgEl.offsetLeft,\n            width: imgEl.offsetWidth,\n            top: imgEl.offsetTop,\n        };\n    }\n};\n\nconst IMAGE_QUERY = ['img', 'svg', '[role=\"img\"]', '[data-zoom]']\n    .map(x => `${x}:not([aria-hidden=\"true\"])`)\n    .join(',');\nconst defaultBodyAttrs = {\n    overflow: '',\n    width: '',\n};\nfunction Controlled(props) {\n    return React.createElement(ControlledBase, { ...props });\n}\nclass ControlledBase extends Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            id: '',\n            isZoomImgLoaded: false,\n            loadedImgEl: undefined,\n            modalState: \"UNLOADED\",\n            shouldRefresh: false,\n        };\n        this.refContent = createRef();\n        this.refDialog = createRef();\n        this.refModalContent = createRef();\n        this.refModalImg = createRef();\n        this.refWrap = createRef();\n        this.imgEl = null;\n        this.prevBodyAttrs = defaultBodyAttrs;\n        this.styleModalImg = {};\n        this.getDialogContainer = () => {\n            let el = document.querySelector('[data-rmiz-portal]');\n            if (el == null) {\n                el = document.createElement('div');\n                el.setAttribute('data-rmiz-portal', '');\n                document.body.appendChild(el);\n            }\n            return el;\n        };\n        this.setId = () => {\n            const gen4 = () => Math.random().toString(16).slice(-4);\n            this.setState({ id: gen4() + gen4() + gen4() });\n        };\n        this.setAndTrackImg = () => {\n            const contentEl = this.refContent.current;\n            if (!contentEl)\n                return;\n            this.imgEl = contentEl.querySelector(IMAGE_QUERY);\n            if (this.imgEl) {\n                this.changeObserver?.disconnect?.();\n                this.imgEl?.addEventListener?.('load', this.handleImgLoad);\n                this.imgEl?.addEventListener?.('click', this.handleZoom);\n                if (!this.state.loadedImgEl) {\n                    this.handleImgLoad();\n                }\n                this.imgElObserver = new ResizeObserver(entries => {\n                    const entry = entries[0];\n                    if (entry?.target) {\n                        this.imgEl = entry.target;\n                        this.setState({});\n                    }\n                });\n                this.imgElObserver.observe(this.imgEl);\n            }\n            else if (!this.changeObserver) {\n                this.changeObserver = new MutationObserver(this.setAndTrackImg);\n                this.changeObserver.observe(contentEl, { childList: true, subtree: true });\n            }\n        };\n        this.handleIfZoomChanged = (prevIsZoomed) => {\n            const { isZoomed } = this.props;\n            if (!prevIsZoomed && isZoomed) {\n                this.zoom();\n            }\n            else if (prevIsZoomed && !isZoomed) {\n                this.unzoom();\n            }\n        };\n        this.handleImgLoad = () => {\n            const { imgEl } = this;\n            const imgSrc = getImgSrc(imgEl);\n            if (!imgSrc)\n                return;\n            const img = new Image();\n            if (testImg(imgEl)) {\n                img.sizes = imgEl.sizes;\n                img.srcset = imgEl.srcset;\n            }\n            img.src = imgSrc;\n            const setLoaded = () => {\n                this.setState({ loadedImgEl: img });\n            };\n            img\n                .decode()\n                .then(setLoaded)\n                .catch(() => {\n                if (testImgLoaded(img)) {\n                    setLoaded();\n                    return;\n                }\n                img.onload = setLoaded;\n            });\n        };\n        this.handleZoom = () => {\n            this.props.onZoomChange?.(true);\n        };\n        this.handleUnzoom = () => {\n            this.props.onZoomChange?.(false);\n        };\n        this.handleDialogCancel = (e) => {\n            e.preventDefault();\n        };\n        this.handleDialogClick = (e) => {\n            if (e.target === this.refModalContent.current || e.target === this.refModalImg.current) {\n                this.handleUnzoom();\n            }\n        };\n        this.handleKeyDown = (e) => {\n            if (e.key === 'Escape' || e.keyCode === 27) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.handleUnzoom();\n            }\n        };\n        this.handleWheel = (e) => {\n            if (e.ctrlKey)\n                return;\n            e.stopPropagation();\n            queueMicrotask(() => {\n                this.handleUnzoom();\n            });\n        };\n        this.handleTouchStart = (e) => {\n            if (e.changedTouches.length === 1 && e.changedTouches[0]) {\n                this.touchYStart = e.changedTouches[0].screenY;\n            }\n        };\n        this.handleTouchMove = (e) => {\n            if (this.touchYStart != null && e.changedTouches[0]) {\n                this.touchYEnd = e.changedTouches[0].screenY;\n                const max = Math.max(this.touchYStart, this.touchYEnd);\n                const min = Math.min(this.touchYStart, this.touchYEnd);\n                const delta = Math.abs(max - min);\n                const threshold = 10;\n                if (delta > threshold) {\n                    this.touchYStart = undefined;\n                    this.touchYEnd = undefined;\n                    this.handleUnzoom();\n                }\n            }\n        };\n        this.handleTouchCancel = () => {\n            this.touchYStart = undefined;\n            this.touchYEnd = undefined;\n        };\n        this.handleResize = () => {\n            this.setState({ shouldRefresh: true });\n        };\n        this.zoom = () => {\n            this.bodyScrollDisable();\n            this.refDialog.current?.showModal?.();\n            this.setState({ modalState: \"LOADING\" });\n            this.loadZoomImg();\n            window.addEventListener('wheel', this.handleWheel, { passive: true });\n            window.addEventListener('touchstart', this.handleTouchStart, { passive: true });\n            window.addEventListener('touchmove', this.handleTouchMove, { passive: true });\n            window.addEventListener('touchcancel', this.handleTouchCancel, { passive: true });\n            document.addEventListener('keydown', this.handleKeyDown, true);\n            this.refModalImg.current?.addEventListener?.('transitionend', this.handleZoomEnd, { once: true });\n        };\n        this.handleZoomEnd = () => {\n            setTimeout(() => {\n                this.setState({ modalState: \"LOADED\" });\n                window.addEventListener('resize', this.handleResize, { passive: true });\n            }, 0);\n        };\n        this.unzoom = () => {\n            this.setState({ modalState: \"UNLOADING\" });\n            window.removeEventListener('wheel', this.handleWheel);\n            window.removeEventListener('touchstart', this.handleTouchStart);\n            window.removeEventListener('touchmove', this.handleTouchMove);\n            window.removeEventListener('touchcancel', this.handleTouchCancel);\n            document.removeEventListener('keydown', this.handleKeyDown, true);\n            this.refModalImg.current?.addEventListener?.('transitionend', this.handleUnzoomEnd, { once: true });\n        };\n        this.handleUnzoomEnd = () => {\n            setTimeout(() => {\n                window.removeEventListener('resize', this.handleResize);\n                this.setState({\n                    shouldRefresh: false,\n                    modalState: \"UNLOADED\",\n                });\n                this.refDialog.current?.close?.();\n                this.bodyScrollEnable();\n            }, 0);\n        };\n        this.bodyScrollDisable = () => {\n            this.prevBodyAttrs = {\n                overflow: document.body.style.overflow,\n                width: document.body.style.width,\n            };\n            const clientWidth = document.body.clientWidth;\n            document.body.style.overflow = 'hidden';\n            document.body.style.width = `${clientWidth}px`;\n        };\n        this.bodyScrollEnable = () => {\n            document.body.style.width = this.prevBodyAttrs.width;\n            document.body.style.overflow = this.prevBodyAttrs.overflow;\n            this.prevBodyAttrs = defaultBodyAttrs;\n        };\n        this.loadZoomImg = () => {\n            const { props: { zoomImg } } = this;\n            const zoomImgSrc = zoomImg?.src;\n            if (zoomImgSrc) {\n                const img = new Image();\n                img.sizes = zoomImg?.sizes ?? '';\n                img.srcset = zoomImg?.srcSet ?? '';\n                img.src = zoomImgSrc;\n                const setLoaded = () => {\n                    this.setState({ isZoomImgLoaded: true });\n                };\n                img\n                    .decode()\n                    .then(setLoaded)\n                    .catch(() => {\n                    if (testImgLoaded(img)) {\n                        setLoaded();\n                        return;\n                    }\n                    img.onload = setLoaded;\n                });\n            }\n        };\n        this.UNSAFE_handleSvg = () => {\n            const { imgEl, refModalImg, styleModalImg } = this;\n            if (testSvg(imgEl)) {\n                const tmp = document.createElement('div');\n                tmp.innerHTML = imgEl.outerHTML;\n                tmp.querySelectorAll('mask[id]').forEach(maskEl => {\n                    const newId = maskEl.id + '-zoom';\n                    tmp.querySelectorAll(`[mask=\"url(#${maskEl.id})\"]`).forEach(maskedEl => {\n                        maskedEl.setAttribute('mask', `url(#${newId})`);\n                    });\n                    maskEl.id = newId;\n                });\n                const svg = tmp.firstChild;\n                svg.style.width = `${styleModalImg.width || 0}px`;\n                svg.style.height = `${styleModalImg.height || 0}px`;\n                svg.addEventListener('click', this.handleUnzoom);\n                refModalImg.current?.firstChild?.remove?.();\n                refModalImg.current?.appendChild?.(svg);\n            }\n        };\n    }\n    render() {\n        const { handleDialogCancel, handleDialogClick, handleUnzoom, handleZoom, imgEl, props: { a11yNameButtonUnzoom, a11yNameButtonZoom, children, classDialog, IconUnzoom, IconZoom, isZoomed, wrapElement: WrapElement, ZoomContent, zoomImg, zoomMargin, }, refContent, refDialog, refModalContent, refModalImg, refWrap, state: { id, isZoomImgLoaded, loadedImgEl, modalState, shouldRefresh, }, } = this;\n        const idModal = `rmiz-modal-${id}`;\n        const idModalImg = `rmiz-modal-img-${id}`;\n        const isDiv = testDiv(imgEl);\n        const isImg = testImg(imgEl);\n        const isSvg = testSvg(imgEl);\n        const imgAlt = getImgAlt(imgEl);\n        const imgSrc = getImgSrc(imgEl);\n        const imgSizes = isImg ? imgEl.sizes : undefined;\n        const imgSrcSet = isImg ? imgEl.srcset : undefined;\n        const hasZoomImg = !!zoomImg?.src;\n        const hasImage = imgEl &&\n            (loadedImgEl || isSvg) &&\n            window.getComputedStyle(imgEl).display !== 'none';\n        const labelBtnZoom = imgAlt\n            ? `${a11yNameButtonZoom}: ${imgAlt}`\n            : a11yNameButtonZoom;\n        const isModalActive = modalState === \"LOADING\" ||\n            modalState === \"LOADED\";\n        const dataContentState = hasImage ? 'found' : 'not-found';\n        const dataOverlayState = modalState === \"UNLOADED\" || modalState === \"UNLOADING\"\n            ? 'hidden'\n            : 'visible';\n        const styleContent = {\n            visibility: modalState === \"UNLOADED\" ? 'visible' : 'hidden',\n        };\n        const styleGhost = getStyleGhost(imgEl);\n        this.styleModalImg = hasImage\n            ? getStyleModalImg({\n                hasZoomImg,\n                imgSrc,\n                isSvg,\n                isZoomed: isZoomed && isModalActive,\n                loadedImgEl,\n                offset: zoomMargin,\n                shouldRefresh,\n                targetEl: imgEl,\n            })\n            : {};\n        let modalContent = null;\n        if (hasImage) {\n            const modalImg = isImg || isDiv\n                ? React.createElement(\"img\", { alt: imgAlt, sizes: imgSizes, src: imgSrc, srcSet: imgSrcSet, ...isZoomImgLoaded && modalState === \"LOADED\" ? zoomImg : {}, \"data-rmiz-modal-img\": \"\", height: this.styleModalImg.height || undefined, id: idModalImg, ref: refModalImg, style: this.styleModalImg, width: this.styleModalImg.width || undefined })\n                : isSvg\n                    ? React.createElement(\"div\", { \"data-rmiz-modal-img\": true, ref: refModalImg, style: this.styleModalImg })\n                    : null;\n            const modalBtnUnzoom = React.createElement(\"button\", { \"aria-label\": a11yNameButtonUnzoom, \"data-rmiz-btn-unzoom\": \"\", onClick: handleUnzoom, type: \"button\" },\n                React.createElement(IconUnzoom, null));\n            modalContent = ZoomContent\n                ? React.createElement(ZoomContent, { buttonUnzoom: modalBtnUnzoom, modalState: modalState, img: modalImg, onUnzoom: handleUnzoom })\n                : React.createElement(React.Fragment, null,\n                    modalImg,\n                    modalBtnUnzoom);\n        }\n        return (React.createElement(WrapElement, { \"aria-owns\": idModal, \"data-rmiz\": \"\", ref: refWrap },\n            React.createElement(WrapElement, { \"data-rmiz-content\": dataContentState, ref: refContent, style: styleContent }, children),\n            hasImage && React.createElement(WrapElement, { \"data-rmiz-ghost\": \"\", style: styleGhost },\n                React.createElement(\"button\", { \"aria-label\": labelBtnZoom, \"data-rmiz-btn-zoom\": \"\", onClick: handleZoom, type: \"button\" },\n                    React.createElement(IconZoom, null))),\n            hasImage && createPortal(React.createElement(\"dialog\", { \"aria-labelledby\": idModalImg, \"aria-modal\": \"true\", className: classDialog, \"data-rmiz-modal\": \"\", id: idModal, onClick: handleDialogClick, onClose: handleUnzoom, onCancel: handleDialogCancel, ref: refDialog, role: \"dialog\" },\n                React.createElement(\"div\", { \"data-rmiz-modal-overlay\": dataOverlayState }),\n                React.createElement(\"div\", { \"data-rmiz-modal-content\": \"\", ref: refModalContent }, modalContent)), this.getDialogContainer())));\n    }\n    componentDidMount() {\n        this.setId();\n        this.setAndTrackImg();\n        this.handleImgLoad();\n        this.UNSAFE_handleSvg();\n    }\n    componentWillUnmount() {\n        if (this.state.modalState !== \"UNLOADED\") {\n            this.bodyScrollEnable();\n        }\n        this.changeObserver?.disconnect?.();\n        this.imgElObserver?.disconnect?.();\n        this.imgEl?.removeEventListener?.('load', this.handleImgLoad);\n        this.imgEl?.removeEventListener?.('click', this.handleZoom);\n        this.refModalImg.current?.removeEventListener?.('transitionend', this.handleZoomEnd);\n        this.refModalImg.current?.removeEventListener?.('transitionend', this.handleUnzoomEnd);\n        window.removeEventListener('wheel', this.handleWheel);\n        window.removeEventListener('touchstart', this.handleTouchStart);\n        window.removeEventListener('touchmove', this.handleTouchMove);\n        window.removeEventListener('touchcancel', this.handleTouchCancel);\n        window.removeEventListener('resize', this.handleResize);\n        document.removeEventListener('keydown', this.handleKeyDown, true);\n    }\n    componentDidUpdate(prevProps) {\n        this.UNSAFE_handleSvg();\n        this.handleIfZoomChanged(prevProps.isZoomed);\n    }\n}\nControlledBase.defaultProps = {\n    a11yNameButtonUnzoom: 'Minimize image',\n    a11yNameButtonZoom: 'Expand image',\n    IconUnzoom: ICompress,\n    IconZoom: IEnlarge,\n    wrapElement: 'div',\n    zoomMargin: 0,\n};\n\nfunction Uncontrolled(props) {\n    const [isZoomed, setIsZoomed] = useState(false);\n    return React.createElement(Controlled, { ...props, isZoomed: isZoomed, onZoomChange: setIsZoomed });\n}\n\nexport { Controlled, Uncontrolled as default };\n"],
  "mappings": "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",
  "names": ["React"]
}
